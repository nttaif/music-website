@model MusicWeb.Models.SongViewModel

@using (Html.BeginForm("EditSong", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (Model.song == null)
    {
        <dive>Something gone wrong. Please contact admin!</dive>
    }
    else
    {

        <div class="form-horizontal">
            <hr />
            @Html.HiddenFor(model => model.song.ID_Song)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.song.Name_Song, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.song.Name_Song, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.song.Name_Song, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.song.ID_Catergory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.selectedCategory, Model.CategoryDropdownList, new { })
                    @Html.ValidationMessageFor(model => model.song.ID_Catergory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.song.Release_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.song.Release_Date, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.song.Release_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.song.Audio_Song, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="mb-3">
                        @*<input class="form-control form-control-sm" id="formFileSm" name="AudioUpload" asp-for="AudioUpload" type="file">*@
                        @Html.TextBoxFor(model => model.song.AudioUpload, new { type = "file" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.song.ImageSong, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="mb-3">
                    <img src="@Url.Content(Model.song.ImageSong)" height="200" width="200" id="previewImage" />
                    @*<input class="form-control form-control-sm" id="formFileSm" name="ImageUpload" asp-for="ImageUpload" onchange="ShowImagesReview(this, document.getElementById('previewImage'))" type="file">*@
                    @Html.TextBoxFor(model => model.song.ImageUpload, new { type = "file", onchange = "ShowImagesReview(this, document.getElementById('previewImage'))" })
                </div>
            </div>

            <div class="form-group" enctype="multipart/form-data">
                @Html.LabelFor(model => model.song.ID_Song, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.selectedSinger, Model.SingerDropList, new { })
                    @Html.ValidationMessageFor(model => model.song.ID_Singer, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
